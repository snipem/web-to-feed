from bs4 import BeautifulSoup
import requests
import sys

if sys.version_info[0] == 2:
	from urlparse import urlparse
else:
	from urllib.parse import urlparse

from feedgen.feed import FeedGenerator

#TODO: Add as parameters
url = "http://www.gamespot.com/videos/review/"
maxlinkHighness = 2
tag = "h3"

def findInnerLink(item):
	a = item.find('a')

	if a != None:
		return a['href']
	else:
		return None

def findOuterLink(item):
	return getParentWithLink(item, 0)

def getParentWithLink(item, linkHeigth):

	if (linkHeigth <= maxlinkHighness):
		link = item.find('a')
		if (link != None):
			return link
		else:
			returnedLink = getParentWithLink(item.parent, linkHeigth+1)
			if returnedLink != None:
				return returnedLink
	else:
		return None

r = requests.get(url)

if (r.status_code != 200):
	sys.stderr.write("Error code is "+ str(r.status_code)+"\n")
	exit(1)

html = r.text
parsed_html = BeautifulSoup(html)

parsedUrl = urlparse(url)
baseUrl = parsedUrl.scheme+"://"+parsedUrl.netloc

fg = FeedGenerator()
fg.id(url)
fg.title('Generated feed for ' + url)
fg.link( href=url, rel='alternate' )
fg.subtitle('Autogenerated by alltorss.py based on tag ' + tag)

for item in parsed_html.body.find_all(tag):
	topic = item.text
	#check if item contains a link
	innerLink = findInnerLink(item)
	outerLink = findOuterLink(item)

	if (innerLink != None):
		link = innerLink
	elif (outerLink != None):
		link = outerLink
	else:
		link = None

	linkHref = link['href']

	fe = fg.add_entry()

	fullLink = baseUrl + linkHref
	fe.id(fullLink)
	fe.title(topic)
	fe.link( href=fullLink )

rssfeed  = fg.rss_str(pretty=True)

if (sys.version_info[0] == 2):
	print (rssfeed)
else:
	sys.stdout.buffer.write(rssfeed)